name: CI/CD Build-Test-Push-Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run unit & health tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest -q

  build_and_push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/candidate-webserver-test:latest

  deploy:
    name: Deploy to remote Docker host
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script: |
            docker rm -f candidate-webserver || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/candidate-webserver-test:latest
            docker run -d --name candidate-webserver -p 8080:8080 \
              -e NAME="DeployedUser" \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/candidate-webserver-test:latest
